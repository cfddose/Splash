/*--------------------------------*- C++ -*----------------------------------*\
          =========                 |
          \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
           \\    /   O peration     | Website:  https://openfoam.org
            \\  /    A nd           | Version:  SplashFOAM v0.1
             \\/     M anipulation  |
        \*---------------------------------------------------------------------------*/
FoamFile
{
    version         2306;
    format          ascii;
    class           dictionary;
    location        "system";
    object          meshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

surfaceFile     "CAD.stl";
// minCellSize 0.0002;

maxCellSize 0.0004;

boundaryCellSize 0.0003;

boundaryLayers
{
    patchBoundaryLayers
    {
        "wall.*"
        {
            nLayers 2;
            optimiseLayer 1; 
            untangleLayers 1; // active by default; 0 to disable
            thicknessRatio 1.15;
            maxFirstLayerThickness 0.0001;
        }
    }
    
    optimisationParameters
    {
        // Number of iterations in the procedure for smoothing normal vectors in the boundary layer
        nSmoothNormals 1; 
        // Number of iterations in the smoothing procedure. 
        maxNumIterations 5; 
        // The ratio between the maximum allowed layer thickness and the estimated feature size.
        featureSizeFactor 0.3; 
        // Calculates the surface normal vectors, and aligns boundary-layer...
        // edges to point in the normal direction
        reCalculateNormals 2; 
        // Controls the maximum difference of the layer thickness between the two...
        // neighbouring points, divided by the distance between the points.
        relThicknessTol 0.1; 
    }
}

// Renaming BCs so patches are not defaulted to walls
renameBoundary
{
    defaultName         wall; //fixedWalls;
    defaultType         wall;

    newPatchNames
    {   
        "inlet.*"
        {
            newName     inlet;
            type     patch;
        }

        "outlet.*"
        {
            newName     outlet;
            type     patch;
        }
    }   
}

workflowControl
{
    stopAfter boundaryLayerRefinement;
    restartFromLatestStep 0; 
}

// 1 for active; 0 for disabled
// Stops the meshing process when it's not possible to capture all geometry.
enforceGeometryConstraints 0; 

// ************************************************************************* //
